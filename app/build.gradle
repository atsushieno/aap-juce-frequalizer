plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

kotlin {
    jvmToolchain(17)
}

android {
    namespace = "org.androidaudioplugin.ports.juce.frequalizer"
    compileSdk = libs.versions.android.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "org.androidaudioplugin.ports.juce.frequalizer"
        minSdk = libs.versions.android.minSdk.get().toInteger()
        ndk {
            // should we make it customizable? We skip others just to reduce build time.
            abiFilters "x86_64", "arm64-v8a"
        }
        externalNativeBuild {
            cmake {
                arguments "-DAAP_DIR=${System.env.AAP_DIR != null ? System.env.AAP_DIR : "$projectDir/../external/aap-core"}",
                        "-DAAP_JUCE_DIR=${System.env.AAP_JUCE_DIR != null ? System.env.AAP_JUCE_DIR : "$projectDir/../external/aap-juce"}",
                        "-DANDROID_STL=c++_shared", "-DANDROID_CPP_FEATURES=exceptions rtti" }
        }
    }
    ndkVersion libs.versions.ndk.get()
    externalNativeBuild {
        cmake {
            version libs.versions.cmake.get()
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    buildFeatures {
        prefab true
    }

    sourceSets {
        main.java.srcDirs +=
            ["../external/Frequalizer/External/JUCE/modules/juce_gui_basics/native/javaopt/app"]
        main.res.srcDirs +=
            []
    }

    dependencies {
        implementation libs.androidx.core.ktx
        implementation libs.startup.runtime
        implementation libs.aap.core
        implementation libs.aap.ui.web
        implementation libs.aap.ui.compose
        // switch to them when you want to debug into aap-core.
        /*
        implementation project(":androidaudioplugin")
        implementation project(":androidaudioplugin-ui-web")
        implementation project(":androidaudioplugin-ui-compose")
         */
    }
}
